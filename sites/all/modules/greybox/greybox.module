<?php
// $Id: greybox.module,v 1.1.2.5 2007/07/14 17:53:00 Gurpartap Exp $

/**
 * Implementation of hook_perm().
 */
function greybox_perm() {
  return array('administer greybox');
}

/**
 * Implementation of hook_menu().
 */
function greybox_menu($maycache) {
  $items = array();

  if ($maycache) {
   $items[] = array(
      'path' => 'admin/settings/greybox',
      'title' => t('Greybox'),
      'description' => t('Configure the appearance of Greybox Popup Window.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => 'greybox_settings',
      'access' => user_access('administer greybox'),
      'type' => MENU_NORMAL_ITEM
     );
  }
  else if (variable_get('greybox_enable', TRUE)) {
    greybox_add_files();
  }

  return $items;
}

/**
 * Implementation of hook_settings().
 */
function greybox_settings() {
  $form = array();

  $form['greybox_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Greybox'),
    '#collapsible' => TRUE, 
    '#collapsed' => FALSE,
  );
  $form['greybox_options']['greybox_enable']  = array(
    '#type' => 'checkbox',
    '#title' => t('Use Greybox'),
    '#description' => t('Unchecking this box will disable Greybox.'),
    '#default_value' => variable_get('greybox_enable', TRUE),
    '#return_value' => TRUE,		
  );
  $form['greybox_options']['greybox_class_text']  = array(
    '#type' => 'textfield',
    '#title' => t('Class name'),
    '#description' => t('The class name of the elements, to call the Greybox upon. Example: Enter <em>greybox</em> if your element HTML code is: <code>&lt;a class="greybox"&gt;</code>.'),
    '#default_value' => variable_get('greybox_class_text', 'greybox'),
  );
  $form['greybox_options']['greybox_window_height']  = array(
    '#type' => 'textfield',
    '#title' => t('Window height(pixels)'),
    '#size' => 5,
    '#default_value' => variable_get('greybox_window_height', 470),
  );
  $form['greybox_options']['greybox_window_width']  = array(
    '#type' => 'textfield',
    '#title' => t('Window width(pixels)'),
    '#size' => 5,
    '#default_value' => variable_get('greybox_window_width', 600),
  );
  $form['greybox_options']['greybox_animate']  = array(
    '#type' => 'checkbox',
    '#title' => t('Slide animation'),
    '#description' => t('Load Greybox Window with a <em>slide down</em> animation.'),
    '#default_value' => variable_get('greybox_animate', TRUE),
    '#return_value' => TRUE,		
  );

  return system_settings_form($form);
}

function greybox_add_files() {
  // Load required js and css files.
  $path = drupal_get_path('module', 'greybox');
  $width = variable_get('greybox_window_width', 600);
  $height = variable_get('greybox_window_height', 470);
  $class_text = variable_get('greybox_class_text', 'greybox');
  $animate = variable_get('greybox_animate', TRUE);
  // Check to see if Greybox is enabled.
  if (variable_get('greybox_enable', TRUE)) {
    if (file_exists($path .'/greybox.css')) {
      // Add the required CSS file.
      drupal_add_css($path .'/greybox.css');
      // Add the required Javascript.
      drupal_add_js($path .'/js/greybox.js');
      drupal_add_js('
  var GB_SITEPATH = \''. base_path() . $path .'\';
  var GB_ANIMATION = '. $animate .';
  var GB_HEIGHT = '. $height .';
  var GB_WIDTH = '. $width .';
  $(document).ready(function(){
    $(\'a.' . $class_text . '\').click(function(){
      var t = this.title || $(this).text() || this.href;
      GB_show(t, this.href);
      return false;
    });
  });
', 'inline');
    }
    // Display warning message if Libraries aren't installed correctly.
    else {
      drupal_set_message(t('The greybox library is not installed correctly. Please download from <a href="http://jquery.com/demo/grey/">http://jquery.com/demo/grey/</a> and, follow the instructions in the Greybox module README.TXT file to copy the files to their correct locations.'), 'error');
    }
  }
}

