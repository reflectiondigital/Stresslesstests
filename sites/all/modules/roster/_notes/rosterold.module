<?php

/**
* Implementation of hook_help().
*
* Throughout Drupal, hook_help() is used to display help text at the top of
* pages. Some other parts of Drupal pages get explanatory text from these hooks
* as well. We use it here to provide a description of the module on the
* module administration page.
*/
function roster_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      // This description is shown in the listing at admin/modules.
      return t('The roster module handles the viewing of the class roster');
  }
}



/**
 * Implementation of hook_node_info
 */
function roster_node_info () {
  return array(
    'survey' => array(
      'name' => t('roster'),
      'module' => 'roster',
      'description' => t("The roster module handles the viewing of the class roster.")));
}



/**
* Implementation of hook_perm().
*
*/
function roster_perm() {
  return array('access roster');
}


/**
* Implementation of hook_menu().
*
*/
function roster_menu($may_cache) {
  $items = array();

    $access = user_access('access roster');
    
    $items[] = array(
      'path' => 'admin/view/roster',
      'title' => t('Class Roster'),
      'description' => t('View the class roster'),
      'callback' => 'roster_admin',
      'callback arguments' => array(NULL, FALSE),
      'access' => user_access('access roster'),
      'weight' => -10,
      'type' => MENU_NORMAL_ITEM,
    );
    
    /*$items[] = array(
      'path' => 'admin/view/roster_export',
      'title' => t('Export Class Roster'),
      'description' => t('View the class roster'),
      'callback' => 'theme_roster_export_doc',
    );*/

   
    return $items;
}


function roster_admin_registrations(){

	//$filter = roster_build_filter_query();
	
	/*$rosterheader = array(
	theme('table_select_header_cell'),
    array('data' => t('Names')),
    array('data' => t('Phone')),
    array('data' => t('Grade')),
    array('data' => t('School')),
    array('data' => t('Section')),
    array('data' => t('Status')),
  );*/
  

   		if (arg(3) == 'sort' && !is_null(arg(3))) {
    		$sortby = ' AND r.field_section_value = ' . arg(4);
    		$cap = true; //add caption
    	} else {
    		$sortby = '';
    		$cap = false;
    	}
 
  //structure C
 $sql = 'SELECT n.field_names_value, r.field_phone_value, r.field_grade_value, r.field_school_value, r.field_status_value, r.nid, r.field_section_value, nd.title, t.field_model_value FROM {content_type_register} r LEFT JOIN {content_field_names} n ON r.nid = n.nid LEFT JOIN {node} nd ON t.nid = nd.nid LEFT JOIN {content_type_class} t ON r.field_section_value = t.nid  WHERE t.field_dates_value > NOW()'. $sortby;
 
  $result = pager_query($sql, 30);

	 /* $form['mail'] = array('#type' => 'fieldset',
    '#title' => t('Email attendees'),
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>');
	  
	  $form['mail']['submit'] = array( 
    '#type' => 'submit',
    '#value' => t('Send Message')
  );

 	  
 	 $destination = drupal_get_destination();*/


  while ($classlist = db_fetch_object($result)) {
    	$classttl =  $classlist->title;
   
   		if ($cap){
			$rostercaption = "<h3>".$classttl."</h3>";
		} else {
			$rostercaption = "";
		}
		echo $rostercaption;
   
		$nodes[$classlist->nid] = '';
		$form['name'][$classlist->nid] = array('#value' => l($classlist->field_names_value, 'node/'.$classlist->nid.'/edit');
		$form['phone'][$classlist->nid] =  array('#value' => $classlist->field_phone_value);
		$form['school'][$classlist->nid] = array('#value' => $classlist->field_school_value);
		$form['section'][$classlist->nid] =  array('#value' =>  ($classlist->field_model_value);
		$form['status'][$classlist->nid] = array('#value' => $classlist->field_status_value);
	  }
	  $form['nodes'] = array('#type' => 'checkboxes', '#options' => $nodes);
	  $form['pager'] = array('#value' => theme('pager', NULL, 50, 0));
	  
	  
	
 }//endwhile
 	
 
 
	//$thetable = theme('table', $rosterheader, $rosterrows, array('width' => '100%', 'class' => 'uc-orders-table', 'style' => 'clear: right;'), $rostercaption);
	
	return $form;
}



/**
 * Display the main class roster, all student registrations in the future
 */
function roster_admin() {

	//$thetable = roster_build_table();
	
    $output = '<table cellpadding="1" width="100%"><tbody style="border-top: 0px;"><tr><td>'
            . drupal_get_form('roster_sort_form')           .'</td><td align="right">'.drupal_get_form('roster_export_form').'<br /><em>(Exporting may take a few moments)</em></td></tr></tbody></table>';

	/*Build email form
	$form['mail'] = array('#type' => 'fieldset',
    '#title' => t('Email registered attendees'),
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>',
  );
  $options = array();
  foreach (module_invoke_all('node_operations') as $operation => $array) {
    $options[$operation] = $array['label'];
  }
  $form['mail']['operation'] = array('#type' => 'select', '#options' => $options,  '#default_value' => 'approve');
  $form['mail']['submit'] = array('#type' => 'submit', '#value' => t('Send email'));
  
  
   $operations = array(
    'email' => array(t('Email attendes'), 'roster_multiple_email_confirm', 'confirm'),

*/
  $output .= drupal_get_form('roster_admin_registrations');
 // $output .= theme('pager', NULL, variable_get('uc_order_number_displayed', 30), 0);
  return $output;
}


function roster_mail_form(){

}




function roster_sort_form() {
	$sessions = array();
	$sessions = roster_session_list();

	  
	  if (!is_null(arg(4))) {
    		$default_session = arg(4);
    	} else {
    		$default_session = 0;
    	}
	
  $form['session'] = array(
    '#type' => 'select',
    '#title' => t('View by section'),
    '#options' => $sessions,
    '#default_value' => $default_session,
    '#attributes' => array('onchange' => 'this.form.submit();')
  );

  $form['submit'] = array( 
    '#type' => 'submit',
    '#value' => 'View',
    '#attributes' => array('id' => 'sort-form-submit'),
    '#prefix' => '<span style="display: none;">',
    '#suffix' => '</span>'
  );

  return $form;
}


function roster_sort_form_submit($form_id, $form_values) {
  if ($form_values['session'] == '0') {
    drupal_goto('admin/view/roster');
  }
  else {
    drupal_goto('admin/view/roster/sort/'. $form_values['session']);
  }
}

function roster_export_form() { 
 $form1['submit'] = array( 
    '#type' => 'submit',
    '#value' => 'Export to Word .doc'
  );

  return $form1;
}

function roster_export_form_submit() {
    theme_roster_export_doc();
}

function roster_session_list() {
	//Get all scheduled sessions
 	$result = db_query("SELECT p.nid, p.field_model_value, n.title AS class, p.field_dates_value FROM {content_type_class} p LEFT JOIN {node} n ON p.field_class_nid = n.nid WHERE p.field_dates_value > NOW() ORDER BY p.field_dates_value ASC");
 	
 	$options[0] = "All";
 	
 	while ($o = db_fetch_object($result)) {
 		//display meaningful info in dropdown filter
 	 	$thedate = substr($o->field_dates_value,5,5);
 	 	$thedate = str_replace('-', '/', $thedate);
 		$displayname = substr($o->class, 0,4).": ". $thedate; 
		$options[$o->nid] = $displayname;
	}
	 	
 	return $options;
 
}

/**
 *  Main Function to export a view as DOC
 */
 //http://drupal.org/node/185306
function theme_roster_export_doc() {
  
drupal_set_header('Content-Type: application/msword');
drupal_set_header('Content-Disposition: attachment; filename="Roster.doc"');
 
 $output = '<html>';
 $output .= '<head><meta http-equiv=Content-Type content="text/html; charset=utf-8"></head>';
 $output .= '<body>';
  
  $table = roster_build_table();
 // $table = "THIS IS A TEST";
  
  $output .= preg_replace('/<\/?(a|span) ?.*?>/', '', $table); //strip 'a' and 'span' tags*/
  
  $output .= "</body></html>";
 
// print $output;
 
 print $output;
 
 module_invoke_all('exit');
  exit;
}


 /* STRUCTURE A
 SELECT n.field_names_value, p.field_phone_value, ro.field_grade_value, s.field_school_value, st.field_status_value, r.nid, r.field_section_value
FROM content_type_register r
LEFT JOIN content_field_names n ON r.nid = n.nid
LEFT JOIN content_field_phone p ON n.nid = p.nid
LEFT JOIN content_field_school s ON p.nid = s.nid 
LEFT JOIN content_field_status st ON s.nid = st.nid 
LEFT JOIN content_type_register ro ON st.nid = ro.nid 
LEFT JOIN content_field_dates d ON ro.field_section_value = d.nid
LEFT JOIN content_type_class t ON ro.field_section_value = t.nid 
WHERE d.field_dates_value > NOW()

STRUCTURE B
SELECT n.field_names_value, p.field_phone_value, ro.field_grade_value, s.field_school_value, r.field_status_value, r.nid, r.field_section_value, nd.title
FROM content_type_register r
LEFT JOIN content_field_names n ON r.nid = n.nid
LEFT JOIN content_field_phone p ON n.nid = p.nid
LEFT JOIN content_field_school s ON p.nid = s.nid 
LEFT JOIN content_type_register ro ON s.nid = ro.nid 
LEFT JOIN content_field_dates d ON ro.field_section_value = d.nid
LEFT JOIN content_type_class t ON ro.field_section_value = t.nid 
LEFT JOIN node nd ON t.nid = nd.nid
WHERE d.field_dates_value > NOW()


STRUCTURE C
SELECT n.field_names_value, r.field_phone_value, r.field_grade_value, r.field_school_value, r.field_status_value, r.nid, r.field_section_value, nd.title, t.field_model_value
FROM content_type_register r
LEFT JOIN content_field_names n ON r.nid = n.nid
LEFT JOIN node nd ON t.nid = nd.nid
LEFT JOIN content_type_class t ON r.field_section_value = t.nid 
WHERE t.field_dates_value > NOW()
 */
